# Copyright Daryle Walker, Hubert Holin, John Maddock 2006 - 2007
# copyright Paul A. Bristow 2006 - 2010
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt.
# \math_toolkit\libs\math\test\jamfile.v2
# Runs all math toolkit tests, functions & distributions,
# and build math examples.

# bring in the rules for testing
import testing ;
import modules ;
import path ;
import pch ;
import ../../../config/checks/config : requires ;
using quickbook ;
using auto-index ;

project
    : requirements
      <include>../../include_private
    ;

#
# Configuration first:
#
obj has_libstdcxx_tr1 : has_libstdcxx_tr1.cpp ;
explicit has_libstdcxx_tr1 ;
obj has_c99_cmath : has_c99_cmath.cpp ;
explicit has_c99_cmath ;

rule all-tests {
     local result ;
     for local source in [ glob test*.cpp ]
     {
         result += [ run $(source) /boost/regex//boost_regex /boost/system /boost/filesystem /boost/test//boost_unit_test_framework ] ;
         result += [ run $(source) /boost/regex//boost_regex /boost/system /boost/filesystem /boost/test//boost_unit_test_framework : : : [ check-target-builds has_libstdcxx_tr1 : <define>TEST_LIBSTDCXX : <build>no ] : $(source:B)_libstdcxx_tr1 ] ;
         result += [ run $(source) /boost/regex//boost_regex /boost/system /boost/filesystem /boost/test//boost_unit_test_framework : : : [ check-target-builds has_c99_cmath : <define>TEST_C99 : <build>no ] : $(source:B)_c99 ] ;
     }
     return $(result) ;     
}
            
test-suite report_gen : [ all-tests ] ;

path-constant images_location : html ;
path-constant here : . ;

xml report : doc/report.qbk : <dependency>report_gen ;
boostbook standalone
    :
        report
    :
        # Path for links to Boost:
        <xsl:param>boost.root=../../../../..
        
        # Some general style settings:
        <xsl:param>table.footnote.number.format=1
        <xsl:param>footnote.number.format=1

        # HTML options first:
        # Use graphics not text for navigation:
        <xsl:param>navig.graphics=1
        # How far down we chunk nested sections, basically all of them:
        <xsl:param>chunk.section.depth=0
        # Don't put the first section on the same page as the TOC:
        <xsl:param>chunk.first.sections=0
        # How far down sections get TOC's
        <xsl:param>toc.section.depth=2
        # Max depth in each TOC:
        <xsl:param>toc.max.depth=4
        # How far down we go with TOC's
        <xsl:param>generate.section.toc.level=10
    ;




